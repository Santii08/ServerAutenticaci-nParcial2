version: "3.8"

services:
  # 游빔 Servicio de autenticaci칩n (Keycloak)
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak_data:/opt/keycloak/data # Persistencia local
      - ./import:/opt/keycloak/data/import # Importaci칩n autom치tica del realm
    networks:
      - app-network # 游댳 Conectado a la red

  # 丘뙖잺 Servicio del backend (API con Spring Boot y HTTPS)
  api:
    build:
      context: ./API
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: demo
      SERVER_PORT: 8443
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY_STORE: /app/keystore.p12
      SERVER_SSL_KEY_STORE_PASSWORD: 123456
      SERVER_SSL_KEY_STORE_TYPE: PKCS12
      SERVER_SSL_KEY_ALIAS: api-cert
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/parcial-realm
    ports:
      - "8443:8443"
    depends_on:
      - keycloak
    volumes:
      - ./API/src/main/resources/keystore.p12:/app/keystore.p12
    networks:
      - app-network # 游댳 Conectado a la red

  # 游눹 Servicio del frontend (Vite + Nginx)
  frontend:
    build:
      context: ./Frontend/Logiin
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=https://api:8443 # 游댳 Usa nombre del servicio API
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - app-network # 游댳 Conectado a la red

  # 丘뙖잺 Servicio del cliente (microservicio)
  service-client:
    build:
      context: ./Microservicio
      dockerfile: Dockerfile
    container_name: service-client
    depends_on:
      - keycloak
      - api
    environment:
      SERVER_PORT: 8082
      KEYCLOAK_TOKEN_URI: http://keycloak:8080/realms/parcial-realm/protocol/openid-connect/token
      KEYCLOAK_CLIENT_ID: service-client
      KEYCLOAK_CLIENT_SECRET: EK3YHkuGg7c9djjBYopwyddobcAbDgHn
      KEYCLOAK_SCOPE: service.read
      API_PROTECTED_URL: https://api:8443/service/data
    ports:
      - "8082:8082"
    networks:
      - app-network
    stdin_open: true # 游댳 Permite interacci칩n desde teclado (modo interactivo)
    tty: true # 游댳 Mantiene la consola abierta (simula terminal real)

# 游깷 Red compartida
networks:
  app-network:
    driver: bridge
